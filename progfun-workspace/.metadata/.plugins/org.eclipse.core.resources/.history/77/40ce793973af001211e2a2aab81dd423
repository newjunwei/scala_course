package week03

object Sheet_traits {
  println("Welcome to the Scala worksheet")       //> Welcome to the Scala worksheet
  def nth[T](n: Int, list: List[T]): T = {
  	if (list.isEmpty) throw new IndexOutOfBoundsException
  	else if (n == 0) list.head  	
  	else nth(n-1, list.tail)
  }                                               //> nth: [T](n: Int, list: week03.List[T])T
  
  val l1 = new Cons(2, new Cons(4, new Cons(1, new Cons[Int](7, new Nil))))
                                                  //> l1  : week03.Cons[Int] = week03.Cons@2985158
  
  nth(4, l1)                                      //> java.util.NoSuchElementException: Nil.head
                                                  //| 	at week03.Nil.head(week03.Sheet_traits.scala:26)
                                                  //| 	at week03.Nil.head(week03.Sheet_traits.scala:24)
                                                  //| 	at week03.Sheet_traits$$anonfun$main$1.nth$1(week03.Sheet_traits.scala:6
                                                  //| )
                                                  //| 	at week03.Sheet_traits$$anonfun$main$1.apply$mcV$sp(week03.Sheet_traits.
                                                  //| scala:13)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$$anonfun$$exe
                                                  //| cute$1.apply$mcV$sp(WorksheetSupport.scala:76)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.redirected(W
                                                  //| orksheetSupport.scala:65)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.$execute(Wor
                                                  //| ksheetSupport.scala:75)
                                                  //| 	at week03.Sheet_traits$.main(week03.Sheet_traits.scala:3)
                                                  //| 	at week03.Sheet_traits.main(week03.Sheet_traits.scala)
}

trait List[T] {
  def isEmpty: Boolean
  def head: T
  def tail: List[T]
}
class Cons[T](val head: T, val tail: List[T]) extends List[T] {
  def isEmpty = false
}
class Nil[T] extends List[T] {
  def isEmpty = true
  def head = throw new NoSuchElementException("Nil.head")
  def tail = throw new NoSuchElementException("Nil.tail")
}